rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funciones de Ayuda ---
    function isOwner(docData) {
      return request.auth != null && request.auth.uid == docData.userId;
    }
   function isConsejeroFor(protagonistaId) {
  return request.auth != null &&
         exists(/databases/$(database)/documents/consejeros/$(request.auth.uid)/protagonistas/$(protagonistaId));
}
    // ▼▼▼ FUNCIÓN CORREGIDA ▼▼▼
    function isConsejero() {
        // Usamos .lower() para hacer la comparación insensible a mayúsculas/minúsculas
        return request.auth != null &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol.lower() == 'consejero';
    }

    // --- Reglas para /users/{userId} ---
    match /users/{userId} {
  allow get: if request.auth.uid == userId || isConsejeroFor(userId);
      // PERMISO ESPECIAL: Permitir que un consejero pueda listar/buscar usuarios.
      allow list: if isConsejero();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isConsejeroFor(userId);
    }

    // --- Reglas para /notificaciones/{userId} ---
    match /notificaciones/{userId} {
      // PERMISO ESPECIAL: Permitir que un consejero pueda escribir (crear) una notificación.
      allow write: if request.auth.uid == userId || isConsejero();
      allow read: if request.auth.uid == userId;

      match /invitaciones/{invitacionId} {
        // Un consejero puede crear la invitación.
        allow create: if isConsejero();
        // El protagonista puede leer y actualizar sus invitaciones.
        allow read, update: if request.auth.uid == userId;
      }
    }

    // --- Reglas para /consejeros/{consejeroId} (se mantienen seguras) ---
    match /consejeros/{consejeroId} {
      allow read, write: if request.auth.uid == consejeroId;
      match /protagonistas/{protaId} {
        allow create: if request.auth.uid == consejeroId || request.auth.uid == protaId;
        allow read, delete: if request.auth.uid == consejeroId;
      }
      match /asistencias/{fecha} {
        allow read, write: if request.auth.uid == consejeroId;
      }
    }
    
     match /comunidades/{comunidadId} {
      // Un consejero puede leer y escribir en el documento de su propia comunidad.
      // El ID del documento debe ser igual al ID del consejero.
      allow read, write: if request.auth.uid == comunidadId && isConsejero();
    }

    // --- Reglas para /PPA/{ppaId} (se mantienen seguras) ---
    match /PPA/{ppaId} {
  // Unificamos get y list en una sola regla 'read'.
  // Permite la lectura si eres el dueño O el consejero asignado.
  allow read: if isOwner(resource.data) || isConsejeroFor(resource.data.userId);

  // Las reglas de escritura se mantienen igual (solo el dueño puede modificar).
  allow create: if isOwner(request.resource.data);
  allow update, delete: if isOwner(resource.data);
}
  }
}