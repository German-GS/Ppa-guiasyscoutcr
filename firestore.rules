rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // --- FUNCIONES DE AYUDA (Sin cambios) ---
    function isAuth() { return request.auth != null; }
    function isOwner(d) { return isAuth() && request.auth.uid == d.userId; }
    function isConsejero() {
      return isAuth() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid))
          .data.rol.lower() == 'consejero';
    }

    // --- COLECCIÓN DE USUARIOS (Sin cambios) ---
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid))
            .data.rol.lower() == 'consejero' &&
          resource.data.rol != null &&
          resource.data.rol.lower() == 'protagonista'
        )
      );
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // --- COLECCIÓN DE CONSEJEROS Y SUBCOLECCIONES (Sin cambios) ---
    match /consejeros/{consejeroId} {
      allow read: if isAuth();
      allow write: if isAuth() && request.auth.uid == consejeroId;

      match /protagonistas/{protaId} {
        allow read: if isAuth();
        allow create: if isAuth() && (
          request.auth.uid == consejeroId ||
          (request.auth.uid == protaId && request.resource.data.uid == protaId)
        );
        allow update, delete: if isAuth() && request.auth.uid == consejeroId;
      }
      match /asistencias/{fecha} {
        allow read, write: if isAuth() && request.auth.uid == consejeroId;
      }
    }
     match /{path=**}/protagonistas/{anyId} {
      allow read: if isAuth();
    }


    // --- COLECCIÓN DE COMUNIDADES (Sin cambios) ---
    match /comunidades/{comunidadId} {
      allow read: if isAuth();
      allow write: if isConsejero();
    }

    // --- PPA (AHORA "BITÁCORAS") REFACTORIZADO ---
    match /PPA/{bitacoraId} {
      // El dueño o el consejero del dueño pueden leer la bitácora.
      allow read: if isOwner(resource.data) ||
                      (isConsejero() &&
                         exists(/databases/$(database)/documents/consejeros/$(request.auth.uid)/protagonistas/$(resource.data.userId)));

      // Un usuario puede crear una bitácora si él es el dueño.
      allow create: if isOwner(request.resource.data);
      
      // El dueño puede actualizar o borrar su bitácora.
      allow update, delete: if isOwner(resource.data);

      // Subcolección para las "Entradas" de cada Bitácora
      match /entradas/{entradaId} {
        // El dueño de la bitácora puede leer y escribir (crear/actualizar) sus propias entradas.
        allow read, write: if isOwner(get(/databases/$(database)/documents/PPA/$(bitacoraId)).data);
        
        // Subcolección para los "Informes de Desafío" dentro de cada Entrada
        match /informes/{informeId} {
            // El dueño de la bitácora puede escribir (crear/actualizar) informes.
            allow write: if isOwner(get(/databases/$(database)/documents/PPA/$(bitacoraId)).data);
        }
      }
    }

    // --- COLECCIÓN DE NOTIFICACIONES (Sin cambios) ---
    match /notificaciones/{userId} {
      allow read, list, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null &&
                      ( isConsejero() || request.resource.data.creadorId == request.auth.uid );
      allow delete: if request.auth != null &&
                      ( request.auth.uid == userId || isConsejero() );

      match /invitaciones/{notifId} {
        allow read, list, update: if request.auth != null && request.auth.uid == userId;
        allow create: if isConsejero() ||
          (request.auth != null &&
           request.resource.data.tipo == 'votacion_ciclo' &&
           request.resource.data.creadorId == request.auth.uid);
        allow delete: if request.auth != null &&
          (request.auth.uid == userId ||
           request.resource.data.creadorId == request.auth.uid);
      }
    }
    
    // --- COLECCIÓN DE CICLOS (Sin cambios) ---
    match /ciclos/{cicloId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
        request.resource.data.secretarioId == request.auth.uid;
      allow update: if request.auth != null &&
        resource.data.secretarioId == request.auth.uid &&
        resource.data.estado == 'borrador' &&
        (request.resource.data.estado == 'borrador' || request.resource.data.estado == 'en_votacion');
      allow delete: if false;

      match /votos/{uid} {
        allow read: if request.auth != null;
        allow create, update: if request.auth != null &&
          request.auth.uid == uid &&
          get(/databases/$(database)/documents/ciclos/$(cicloId)).data.votacion.estado == 'en_votacion' &&
          request.time <= get(/databases/$(database)/documents/ciclos/$(cicloId)).data.votacion.cierraEn;
      }
    }
  }
}