rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Reglas para /users/{userId}
    match /users/{userId} {
      allow get, list: if request.auth != null;

      allow create: if request.auth != null && request.auth.uid == userId;

      allow update: if (
        // Protagonista actualizando primerInicioSesion o ultimoInicio
        (request.auth != null &&
         request.auth.uid == userId &&
         request.resource.data.diff(resource.data).changedKeys().hasOnly(["primerInicioSesion", "ultimoInicio"]))

        || 

        // Consejero actualizando datos del protagonista que tiene asignado
        (
          request.auth != null &&
          exists(/databases/$(database)/documents/consejeros/$(request.auth.uid)/protagonistas/$(userId)) &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly([
            "etapas", "campamento1", "campamento2", "campamento3", "rol", "updatedAt"
          ])
        )
      );
    }

    // Reglas para notificaciones generales
    match /notificaciones/{userId} {
      allow read, write, update, delete: if request.auth != null;
    }

    match /notificaciones/{userId}/invitaciones/{invitacionId} {
      allow read, write, update, delete, list: if request.auth != null;

      allow update: if request.auth.uid == userId &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly(["estado"]) &&
        request.resource.data.estado in ["aceptado", "rechazado"];
    }

    // Reglas para consejeros y subcolecciones
    match /consejeros/{consejeroId} {
      allow create, read, write: if request.auth != null && request.auth.uid == consejeroId;

      match /protagonistas/{protaId} {
        allow create: if request.auth != null && (
          request.auth.uid == consejeroId ||  // consejero crea vínculo
          request.auth.uid == protaId         // protagonista acepta invitación
        );

        allow read, write: if request.auth != null && request.auth.uid == consejeroId;
      }

      match /asistencias/{fecha} {
        allow read, write: if request.auth != null && request.auth.uid == consejeroId;
      }
    }

    // Reglas para PPA
    match /PPA/{ppaId} {
      allow read: if request.auth != null &&
        (
          request.auth.uid == resource.data.userId ||
          exists(/databases/$(database)/documents/consejeros/$(request.auth.uid)/protagonistas/$(resource.data.userId))
        );

      allow write: if request.auth != null &&
        (
          request.auth.uid == request.resource.data.userId ||
          exists(/databases/$(database)/documents/consejeros/$(request.auth.uid)/protagonistas/$(request.resource.data.userId))
        );
    }

  }
}
